{"version":3,"sources":["constants/theme.js","components/EditForm.js","components/Todo.js","components/Footer.js","components/App.js","constants/GlobalStyle.js","index.js"],"names":["COLOR_THEME","light","page","card","shadow","border_bottom","text_submit","text_title","text_primary","text_primary_highlight","text_primary_edit","btn_grey","func","func_hover","func_transparent","checkbox","checked","dark","Form","styled","form","FormInput","input","theme","Done","FontAwesomeIcon","EditForm","todo","todos","setTodos","useState","taskname","newInputVal","setNewInputVal","handleEdit","id","map","isBeingEdited","onSubmit","e","preventDefault","autoFocus","value","onChange","target","icon","faCheckSquare","onClick","TodoItem","li","isDone","filter","Taskname","div","props","Edit","Remove","Checkbox","$isDone","Todo","sort","a","b","faEdit","faTrashAlt","data","handleRemove","FooterContainer","Footer","href","rel","MainArea","Card","InputArea","Title","h2","InputForm","Input","Submit","button","TodoArea","ul","FilterBTNContainer","length","FilterBTN","FilterInfo","Circle","Icon","App","setTheme","setFilter","inputVal","setInputVal","faMoon","faSun","style","color","alert","type","placeholder","variant","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"+LAAaA,EAAc,CACzBC,MAAO,CACLC,KAAM,UACNC,KAAM,OACNC,OAAQ,wBACRC,cAAe,wBACfC,YAAa,OACbC,WAAY,OACZC,aAAc,OACdC,uBAAwB,OACxBC,kBAAmB,OACnBC,SAAU,UACVC,KAAM,UACNC,WAAY,UACZC,iBAAkB,YAClBC,SAAU,UACVC,QAAS,4BAEXC,KAAM,CACJf,KAAM,UACNC,KAAM,UACNC,OAAQ,qBACRC,cAAe,2BACfC,YAAa,OACbC,WAAY,OACZC,aAAc,OACdC,uBAAwB,OACxBC,kBAAmB,OACnBC,SAAU,UACVC,KAAM,UACNC,WAAY,UACZC,iBAAkB,YAClBC,SAAU,UACVC,QAAS,6B,4BC5BPE,EAAOC,IAAOC,KAAV,oIAOJC,EAAYF,IAAOG,MAAV,oPAGJ,qBAAGC,MAAkBb,qBAChB,qBAAGa,MAAkBrB,QAS/BsB,EAAOL,YAAOM,IAAPN,CAAH,2MAKC,qBAAGI,MAAkBf,gBAEnB,qBAAGe,MAAkBd,0BAKnB,SAASiB,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACpBC,mBAASH,EAAKI,UADM,mBACnDC,EADmD,KACtCC,EADsC,KAEpDC,EAAa,SAACC,EAAIb,GACtBO,EACED,EAAMQ,KAAI,SAACT,GACT,OAAIA,EAAKQ,KAAOA,EAAWR,EACpB,2BACFA,GADL,IAEEI,SAAUT,EACVe,eAAe,SAKvB,OACE,eAACnB,EAAD,CACEoB,SAAU,SAACC,GACTA,EAAEC,iBACFN,EAAWP,EAAKQ,GAAIH,IAHxB,UAME,cAACX,EAAD,CACEoB,WAAS,EACTC,MAAOV,EACPW,SAAU,SAACJ,GACTN,EAAeM,EAAEK,OAAOF,UAG5B,cAAClB,EAAD,CACEqB,KAAMC,IACNC,QAAS,WACPb,EAAWP,EAAKQ,GAAIH,SC7D9B,I,EAAMgB,EAAW7B,IAAO8B,GAAV,iWAWiB,qBAAG1B,MAAkBlB,iBAEhD,qBAAG6C,QACG,qCAEU,qBAAG3B,MAAkBP,UAF/B,cAIN,gBAAGkC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACAD,GACW,WAAXC,GADA,kCAKA,gBAAGD,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,OACCD,GACU,cAAXC,GADA,kCAMEC,EAAWjC,IAAOkC,IAAV,6IAIH,qBAAG9B,MAAkBf,gBACX,SAAC8C,GAAD,OAAYA,EAAMJ,OAAS,eAAiB,UAE3DK,EAAOpC,YAAOM,IAAPN,CAAH,2MAIC,qBAAGI,MAAkBf,gBAGnB,qBAAGe,MAAkBd,0BAI5B+C,EAASrC,YAAOoC,EAAPpC,CAAH,oDAGNsC,EAAWtC,IAAOkC,IAAV,4VAGF,qBAAGK,QAAyB,MAAQ,SAC1C,qBAAGnC,MAAkBR,YAKZ,qBAAG2C,QAAyB,EAAI,KAG7B,qBAAGnC,MAAkBX,QAQxB,SAAS+C,EAAT,GAAkD,IAAlChC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUsB,EAAU,EAAVA,OAoCpD,OACE,eAACH,EAAD,CAAUE,OAAQvB,EAAKuB,OAAQC,OAAQA,EAAvC,UACE,cAACM,EAAD,CACEC,QAAS/B,EAAKuB,OACdH,QAAS,WA1Bc,IAACZ,IA2BDR,EAAKQ,GAzBhCN,EACED,EACGQ,KAAI,SAACT,GACJ,OAAIA,EAAKQ,KAAOA,EAAWR,EACpB,2BACFA,GADL,IAEEuB,QAASvB,EAAKuB,YAGjBU,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEX,OAASY,EAAEZ,YAYxB,SAME,2BAEAvB,EAAKU,eACL,cAACe,EAAD,CAAUF,OAAQvB,EAAKuB,OAAvB,SAAgCvB,EAAKI,WAEtCJ,EAAKU,eACJ,cAACX,EAAD,CAAUC,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,KAE9CF,EAAKU,eACL,cAACkB,EAAD,CACEV,KAAMkB,IACNhB,QAAS,WAtDO,IAACZ,IAuDCR,EAAKQ,GAtD7BN,EACED,EAAMQ,KAAI,SAACT,GACT,OAAIA,EAAKQ,KAAOA,GAEZR,EAAKuB,OAFkBvB,EAGpB,2BACFA,GADL,IAEEU,eAAe,WAmDnB,cAACmB,EAAD,CACEX,KAAMmB,IACNjB,QAAS,YAhCM,SAACZ,GACpB,IAAM8B,EAAOrC,EAAMuB,QAAO,SAACxB,GACzB,OAAOQ,IAAOR,EAAKQ,MAErBN,EAASoC,GA6BHC,CAAavC,EAAKQ,UC5I5B,I,0BAAMgC,EAAkBhD,IAAOkC,IAAV,ySAMV,qBAAG9B,MAAkBhB,cAChB,qBAAGgB,MAAkBrB,QAGxB,qBAAGqB,MAAkBX,QAGnB,qBAAGW,MAAkBV,cAIrB,SAASuD,IACtB,OACE,eAACD,EAAD,2CAC6B,KAC3B,mBACEE,KAAK,sCACLzB,OAAO,SACP0B,IAAI,aAHN,2BCbN,I,EAAMC,EAAWpD,IAAOkC,IAAV,0JAKE,qBAAG9B,MAAkBrB,QAE/BsE,EAAOrD,IAAOkC,IAAV,uPAGM,qBAAG9B,MAAkBpB,QACJ,qBAAGoB,MAAkBnB,UAOhDqE,EAAYtD,IAAOkC,IAAV,mGAKTqB,EAAQvD,IAAOwD,GAAV,iIAKA,qBAAGpD,MAAkBhB,cAE1BqE,GAAYzD,IAAOC,KAAV,0EAITyD,GAAQ1D,IAAOG,MAAV,qXAKK,qBAAGC,MAAkBpB,QAC1B,qBAAGoB,MAAkBd,0BAQD,qBAAGc,MAAkBlB,iBAG9CyE,GAAS3D,IAAO4D,OAAV,uNACD,qBAAGxD,MAAkBjB,eAGhB,qBAAGiB,MAAkBX,QAInB,qBAAGW,MAAkBV,cAGjCmE,GAAW7D,IAAO8D,GAAV,wGAMRC,GAAqB/D,IAAOkC,IAAV,+GACX,qBAAGzB,MAAmBuD,OAAS,OAAS,UAK/CC,GAAYjE,IAAO4D,OAAV,gNAIJ,qBAAGxD,MAAkBf,gBAChB,qBAAGe,MAAkBZ,YAInB,qBAAGY,MAAkBT,oBAGjCuE,GAAalE,IAAOkC,IAAV,mEAEL,qBAAG9B,MAAkBf,gBAE1B8E,GAASnE,IAAOkC,IAAV,iLAII,qBAAG9B,MAAkBX,QAM/B2E,GAAOpE,YAAOM,IAAPN,CAAH,mHAONgB,GAAK,EACM,SAASqD,KAAO,IAAD,EACF1D,mBAAS,SADP,mBACrBP,EADqB,KACdkE,EADc,OAEA3D,mBAAS,OAFT,mBAErBqB,EAFqB,KAEbuC,EAFa,OAGI5D,mBAAS,IAHb,mBAGrB6D,EAHqB,KAGXC,EAHW,OAIF9D,mBAAS,CACjC,CACEK,GAAI,EACJJ,SAAU,qBACVmB,QAAQ,EACRb,eAAe,GAEjB,CACEF,GAAI,EACJJ,SAAU,qBACVmB,QAAQ,EACRb,eAAe,KAfS,mBAIrBT,EAJqB,KAIdC,EAJc,KA4C5B,OACE,eAAC,IAAD,CAAeN,MAAOvB,EAAYuB,GAAlC,UACE,eAACgD,EAAD,WACE,cAACe,GAAD,CACEvC,QAAS,WACP0C,EAAmB,UAAVlE,EAAoB,OAAS,UAF1C,SAKGA,EACC,cAACgE,GAAD,CAAM1C,KAAMgD,MAEZ,cAACN,GAAD,CAAM1C,KAAMiD,IAAOC,MAAO,CAAEC,MAAO,YAGvC,eAACxB,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,mBACA,eAACE,GAAD,CAAWtC,SA1CK,SAACC,GACzBA,EAAEC,iBACe,KAAbmD,GAIJ9D,EAAS,CACP,CACEM,MACAJ,SAAU4D,EACVzC,QAAQ,EACRb,eAAe,IALX,mBAOHT,KAELgE,EAAY,IACZzD,MAbE8D,MAAM,yBAuCA,UACE,cAACpB,GAAD,CACEqB,KAAK,OACLzD,WAAW,EACX0D,YAAY,qBACZzD,MAAOiD,EACPhD,SAAU,SAACJ,GACTqD,EAAYrD,EAAEK,OAAOF,UAGzB,cAACoC,GAAD,CAAQoB,KAAK,SAASE,QAAQ,YAA9B,uBAKJ,cAACpB,GAAD,UACGpD,EAAMQ,KAAI,SAACT,GAAD,OACT,cAACgC,EAAD,CAEEhC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVsB,OAAQA,GAJHxB,EAAKQ,SAQhB,eAAC+C,GAAD,CAAoBtD,MAAOA,EAA3B,UACE,cAACyD,GAAD,UAAalC,IACb,cAACiC,GAAD,CACErC,QAAS,WACP2C,EAAU,OACV7D,EAASD,IAHb,iBAQA,cAACwD,GAAD,CACErC,QAAS,WACP2C,EAAU,UACV7D,EAASD,IAHb,oBAQA,cAACwD,GAAD,CACErC,QAAS,WACP2C,EAAU,aACV7D,EAASD,IAHb,uBAQA,cAACwD,GAAD,CAAWrC,QA5EQ,WAC3B,IAAMkB,EAAOrC,EAAMuB,QAAO,SAACxB,GACzB,OAAuB,IAAhBA,EAAKuB,UAEdrB,EAASoC,IAwED,sCAMN,cAACG,EAAD,OC3ON,IAoBeiC,GApBKC,YAAH,6TCGjBC,IAASC,OACP,qCACE,cAAC,GAAD,IACA,cAAChB,GAAD,OAEFiB,SAASC,eAAe,W","file":"static/js/main.7492bfac.chunk.js","sourcesContent":["export const COLOR_THEME = {\r\n  light: {\r\n    page: '#f5f5f5',\r\n    card: '#fff',\r\n    shadow: 'rgba(50, 50, 50, 0.3)',\r\n    border_bottom: 'rgba(70, 70, 70, 0.5)',\r\n    text_submit: '#fff',\r\n    text_title: '#222',\r\n    text_primary: '#444',\r\n    text_primary_highlight: '#111',\r\n    text_primary_edit: '#777',\r\n    btn_grey: '#f3f3f3',\r\n    func: '#32539A',\r\n    func_hover: '#28427B',\r\n    func_transparent: '#28427B33',\r\n    checkbox: '#cecece',\r\n    checked: 'rgba(120, 120, 120, 0.1)'\r\n  },\r\n  dark: {\r\n    page: '#121212',\r\n    card: '#1f1f1f',\r\n    shadow: 'rgba(0, 0, 0, 0.3)',\r\n    border_bottom: 'rgba(180, 180, 180, 0.5)',\r\n    text_submit: '#fff',\r\n    text_title: '#fff',\r\n    text_primary: '#ddd',\r\n    text_primary_highlight: '#fff',\r\n    text_primary_edit: '#ccc',\r\n    btn_grey: '#2d2d2d',\r\n    func: '#c70e62',\r\n    func_hover: '#db1a73',\r\n    func_transparent: '#c70e6233',\r\n    checkbox: '#9a9a9a',\r\n    checked: 'rgba(120, 120, 120, 0.1)'\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding: 0;\r\n`\r\nconst FormInput = styled.input`\r\n  font-size: 20px;\r\n  font-family: 'Maven Pro', sans-serif;\r\n  color: ${({ theme }) => theme.text_primary_edit};\r\n  background: ${({ theme }) => theme.page};\r\n  padding: 4px;\r\n  border: none;\r\n  border-radius: 2px;\r\n  transition: all 0.2s;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nconst Done = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n  transition: all 0.1s;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  &:hover {\r\n    color: ${({ theme }) => theme.text_primary_highlight};\r\n    transform: translate(1px, 1px);\r\n  }\r\n`\r\n\r\nexport default function EditForm({ todo, todos, setTodos }) {\r\n  const [newInputVal, setNewInputVal] = useState(todo.taskname)\r\n  const handleEdit = (id, input) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          taskname: input,\r\n          isBeingEdited: false\r\n        }\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault()\r\n        handleEdit(todo.id, newInputVal)\r\n      }}\r\n    >\r\n      <FormInput\r\n        autoFocus\r\n        value={newInputVal}\r\n        onChange={(e) => {\r\n          setNewInputVal(e.target.value)\r\n        }}\r\n      />\r\n      <Done\r\n        icon={faCheckSquare}\r\n        onClick={() => {\r\n          handleEdit(todo.id, newInputVal)\r\n        }}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport EditForm from './EditForm'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TodoItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px 10px 10px;\r\n  border-bottom: 1px solid transparent;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    transform: translate(1px, 1px);\r\n    cursor: pointer;\r\n    border-bottom: 1px solid ${({ theme }) => theme.border_bottom};\r\n  }\r\n  ${({ isDone }) =>\r\n    isDone &&\r\n    `      \r\n      background: ${({ theme }) => theme.checked};\r\n    `}\r\n  ${({ isDone, filter }) =>\r\n    isDone &&\r\n    filter === 'ACTIVE' &&\r\n    `\r\n      display: none;\r\n    `}\r\n  ${({ isDone, filter }) =>\r\n    !isDone &&\r\n    filter === 'COMPLETED' &&\r\n    `\r\n      display: none;\r\n    `}\r\n`\r\nconst Taskname = styled.div`\r\n  flex: 1;\r\n  font-size: 20px;\r\n  font-family: 'Maven Pro', sans-serif;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  text-decoration: ${(props) => (props.isDone ? 'line-through' : 'none')};\r\n`\r\nconst Edit = styled(FontAwesomeIcon)`\r\n  cursor: pointer;\r\n  margin-right: 16px;\r\n  transition: all 0.1s;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  font-size: 18px;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.text_primary_highlight};\r\n    transform: translate(1px, 1px);\r\n  }\r\n`\r\nconst Remove = styled(Edit)`\r\n  margin-right: unset;\r\n`\r\nconst Checkbox = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: ${({ $isDone }) => ($isDone ? '1px' : '2px')} solid\r\n    ${({ theme }) => theme.checkbox};\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  position: relative;\r\n  div {\r\n    opacity: ${({ $isDone }) => ($isDone ? 1 : 0)};\r\n    width: 13px;\r\n    height: 13px;\r\n    background: ${({ theme }) => theme.func};\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`\r\n\r\nexport default function Todo({ todo, todos, setTodos, filter }) {\r\n  const handleStartEdit = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        // 不能編輯已完成的 todo\r\n        if (todo.isDone) return todo\r\n        return {\r\n          ...todo,\r\n          isBeingEdited: true\r\n        }\r\n      })\r\n    )\r\n  }\r\n  const handleCheckboxChange = (id) => {\r\n    // 打勾時自動排序，已完成的排後面\r\n    setTodos(\r\n      todos\r\n        .map((todo) => {\r\n          if (todo.id !== id) return todo\r\n          return {\r\n            ...todo,\r\n            isDone: !todo.isDone\r\n          }\r\n        })\r\n        .sort((a, b) => {\r\n          return a.isDone - b.isDone\r\n        })\r\n    )\r\n  }\r\n  const handleRemove = (id) => {\r\n    const data = todos.filter((todo) => {\r\n      return id !== todo.id\r\n    })\r\n    setTodos(data)\r\n  }\r\n  return (\r\n    <TodoItem isDone={todo.isDone} filter={filter}>\r\n      <Checkbox\r\n        $isDone={todo.isDone}\r\n        onClick={() => {\r\n          handleCheckboxChange(todo.id)\r\n        }}\r\n      >\r\n        <div></div>\r\n      </Checkbox>\r\n      {!todo.isBeingEdited && (\r\n        <Taskname isDone={todo.isDone}>{todo.taskname}</Taskname>\r\n      )}\r\n      {todo.isBeingEdited && (\r\n        <EditForm todo={todo} todos={todos} setTodos={setTodos} />\r\n      )}\r\n      {!todo.isBeingEdited && (\r\n        <Edit\r\n          icon={faEdit}\r\n          onClick={() => {\r\n            handleStartEdit(todo.id)\r\n          }}\r\n        />\r\n      )}\r\n      <Remove\r\n        icon={faTrashAlt}\r\n        onClick={() => {\r\n          handleRemove(todo.id)\r\n        }}\r\n      />\r\n    </TodoItem>\r\n  )\r\n}\r\n\r\nTodo.propTypes = {\r\n  todo: PropTypes.object,\r\n  hadleRemove: PropTypes.func,\r\n  handleCheckboxChange: PropTypes.func,\r\n  filter: PropTypes.string\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FooterContainer = styled.div`\r\n  height: 50px;\r\n  line-height: 50px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  letter-spacing: 1.5px;\r\n  color: ${({ theme }) => theme.text_title};\r\n  background: ${({ theme }) => theme.page};\r\n  a {\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.func};\r\n    transition: ease 0.2s;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.func_hover};\r\n    }\r\n  }\r\n`\r\nexport default function Footer() {\r\n  return (\r\n    <FooterContainer>\r\n      © Copyright 2021. Made by {'  '}\r\n      <a\r\n        href='https://github.com/jackielin7789978'\r\n        target='_blank'\r\n        rel='noreferrer'\r\n      >\r\n        Jackie Lin\r\n      </a>\r\n    </FooterContainer>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { COLOR_THEME } from '../constants/theme'\r\nimport styled from 'styled-components'\r\nimport Todo from './Todo'\r\nimport Footer from './Footer'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MainArea = styled.div`\r\n  min-height: calc(100vh - 50px);\r\n  padding-top: 120px;\r\n  padding-bottom: 20px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.page};\r\n`\r\nconst Card = styled.div`\r\n  width: 600px;\r\n  min-height: 200px;\r\n  background: ${({ theme }) => theme.card};\r\n  box-shadow: 1px 4px 10px 1px ${({ theme }) => theme.shadow};\r\n  border-radius: 2px;\r\n  border: 1px solid transparent;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0px auto;\r\n`\r\nconst InputArea = styled.div`\r\n  width: 100%;\r\n  border: 1px solid transparent;\r\n  margin-top: 20px;\r\n`\r\nconst Title = styled.h2`\r\n  padding: 20px 0px;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text_title};\r\n`\r\nconst InputForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n  padding: 6px;\r\n  font-size: 20px;\r\n  font-family: 'Maven Pro', sans-serif;\r\n  background: ${({ theme }) => theme.card};\r\n  color: ${({ theme }) => theme.text_primary_highlight};\r\n  border: none;\r\n  margin-right: 18px;\r\n  border-bottom: 1px solid transparent;\r\n  border-radius: 0px;\r\n  transition: linear 0.2s;\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid ${({ theme }) => theme.border_bottom};\r\n  }\r\n`\r\nconst Submit = styled.button`\r\n  color: ${({ theme }) => theme.text_submit};\r\n  font-family: 'Roboto', sans-serif;\r\n  padding: 8px 20px;\r\n  background: ${({ theme }) => theme.func};\r\n  font-size: 18px;\r\n  transition: all linear 0.2s;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.func_hover};\r\n  }\r\n`\r\nconst TodoArea = styled.ul`\r\n  width: 70%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  right: 30px;\r\n`\r\nconst FilterBTNContainer = styled.div`\r\n  display: ${({ todos }) => (todos.length ? 'flex' : 'none')};\r\n  align-items: center;\r\n  margin: 10px auto;\r\n  font-size: 14px;\r\n`\r\nconst FilterBTN = styled.button`\r\n  margin: 0 4px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  background: ${({ theme }) => theme.btn_grey};\r\n  border: none;\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.func_transparent};\r\n  }\r\n`\r\nconst FilterInfo = styled.div`\r\n  padding: 8px 16px;\r\n  color: ${({ theme }) => theme.text_primary}; ;\r\n`\r\nconst Circle = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  background: ${({ theme }) => theme.func};\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 24px;\r\n  cursor: pointer;\r\n`\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nlet id = 3\r\nexport default function App() {\r\n  const [theme, setTheme] = useState('light')\r\n  const [filter, setFilter] = useState('ALL')\r\n  const [inputVal, setInputVal] = useState('')\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      taskname: '吃早餐',\r\n      isDone: false,\r\n      isBeingEdited: false\r\n    },\r\n    {\r\n      id: 2,\r\n      taskname: '吃午餐',\r\n      isDone: false,\r\n      isBeingEdited: false\r\n    }\r\n  ])\r\n\r\n  const handleInputSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (inputVal === '') {\r\n      alert('Please enter a task!')\r\n      return\r\n    }\r\n    setTodos([\r\n      {\r\n        id,\r\n        taskname: inputVal,\r\n        isDone: false,\r\n        isBeingEdited: false\r\n      },\r\n      ...todos\r\n    ])\r\n    setInputVal('')\r\n    id++\r\n  }\r\n  const handleClearCompleted = () => {\r\n    const data = todos.filter((todo) => {\r\n      return todo.isDone === false\r\n    })\r\n    setTodos(data)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={COLOR_THEME[theme]}>\r\n      <MainArea>\r\n        <Circle\r\n          onClick={() => {\r\n            setTheme(theme === 'light' ? 'dark' : 'light')\r\n          }}\r\n        >\r\n          {theme ? (\r\n            <Icon icon={faMoon} />\r\n          ) : (\r\n            <Icon icon={faSun} style={{ color: '#fff' }} />\r\n          )}\r\n        </Circle>\r\n        <Card>\r\n          <InputArea>\r\n            <Title>TODO</Title>\r\n            <InputForm onSubmit={handleInputSubmit}>\r\n              <Input\r\n                type='text'\r\n                autoFocus={true}\r\n                placeholder='Add a task here...'\r\n                value={inputVal}\r\n                onChange={(e) => {\r\n                  setInputVal(e.target.value)\r\n                }}\r\n              />\r\n              <Submit type='submit' variant='contained'>\r\n                ADD\r\n              </Submit>\r\n            </InputForm>\r\n          </InputArea>\r\n          <TodoArea>\r\n            {todos.map((todo) => (\r\n              <Todo\r\n                key={todo.id}\r\n                todo={todo}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                filter={filter}\r\n              />\r\n            ))}\r\n          </TodoArea>\r\n          <FilterBTNContainer todos={todos}>\r\n            <FilterInfo>{filter}</FilterInfo>\r\n            <FilterBTN\r\n              onClick={() => {\r\n                setFilter('ALL')\r\n                setTodos(todos)\r\n              }}\r\n            >\r\n              all\r\n            </FilterBTN>\r\n            <FilterBTN\r\n              onClick={() => {\r\n                setFilter('ACTIVE')\r\n                setTodos(todos)\r\n              }}\r\n            >\r\n              active\r\n            </FilterBTN>\r\n            <FilterBTN\r\n              onClick={() => {\r\n                setFilter('COMPLETED')\r\n                setTodos(todos)\r\n              }}\r\n            >\r\n              completed\r\n            </FilterBTN>\r\n            <FilterBTN onClick={handleClearCompleted}>\r\n              clear completed\r\n            </FilterBTN>\r\n          </FilterBTNContainer>\r\n        </Card>\r\n      </MainArea>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    height: 100vh;\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport default GlobalStyle\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport GlobalStyle from './constants/GlobalStyle'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}