{"version":3,"sources":["constants/style.js","components/styledApp.js","App.js","index.js"],"names":["COLORS","Page","styled","div","Card","InputArea","Title","InputForm","form","Input","input","Submit","button","TodoArea","ul","TodoItem","li","isDone","filter","Taskname","props","Form","FormInput","Edit","EditOutlinedIcon","Done","DoneOutlinedIcon","Remove","DeleteOutlineIcon","FilterBTNContainer","todos","length","FilterBTN","Button","FilterInfo","EditForm","todo","setTodos","useState","taskname","newInputVal","setNewInputVal","handleEdit","id","map","isBeingEdited","onSubmit","e","preventDefault","autoFocus","value","onChange","target","onClick","Todo","Checkbox","sx","color","sort","a","b","data","handleRemove","App","setFilter","inputVal","setInputVal","alert","type","placeholder","variant","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a9438fa.chunk.js","sourcesContent":["export const COLORS = {\r\n  light_page: \"#f5f5f5\",\r\n  light_card: \"#fff\",\r\n  light_shadow: \"rgba(90, 90, 90, 0.3)\",\r\n  light_text_title: \"#222\",\r\n  light_text_primary: \"#444\",\r\n  light_text_primary_highlight: \"#111\",\r\n  light_text_primary_edit: \"#777\",\r\n  light_text_white: \"#fff\",\r\n  ligth_text_grey: \"#999\",\r\n  light_func: \"#EE882F\",\r\n  light_func_hover: \"#F09342\",\r\n  light_func_transparent: \"rgba(240, 147, 66, 0.1)\",\r\n  light_checked: \"rgba(120, 120, 120, 0.1)\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../constants/style\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport DoneOutlinedIcon from \"@mui/icons-material/DoneOutlined\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const Page = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: ${COLORS.light_page};\r\n  border: 1px solid transparent;\r\n  font-family: \"Roboto\", sans-serif;\r\n`;\r\nexport const Card = styled.div`\r\n  width: 600px;\r\n  min-height: 220px;\r\n  margin: 10% auto;\r\n  background: ${COLORS.light_card};\r\n  box-shadow: 2px 6px 8px 2px ${COLORS.light_shadow};\r\n  border-radius: 2px;\r\n  border: 1px solid transparent;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const InputArea = styled.div`\r\n  width: 100%;\r\n  border: 1px solid transparent;\r\n  margin-top: 20px;\r\n`;\r\nexport const Title = styled.div`\r\n  padding: 20px 0px;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: ${COLORS.light_text_title};\r\n`;\r\nexport const InputForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport const Input = styled.input`\r\n  box-sizing: border-box;\r\n  padding: 6px;\r\n  font-size: 20px;\r\n  font-family: \"Maven Pro\", sans-serif;\r\n  color: ${COLORS.light_text_primary_highlight};\r\n  border: none;\r\n  margin-right: 18px;\r\n  border-bottom: 1.5px solid transparent;\r\n  border-radius: 0px;\r\n  transition: linear 0.2s;\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1.5px solid ${COLORS.light_shadow};\r\n  }\r\n`;\r\nexport const Submit = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  color: ${COLORS.light_text_white};\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 8px 20px;\r\n  background: ${COLORS.light_func};\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: ${COLORS.light_func_hover};\r\n  }\r\n`;\r\nexport const TodoArea = styled.ul`\r\n  width: 70%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  right: 30px;\r\n`;\r\nexport const TodoItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px 10px 10px;\r\n  border-bottom: 1.5px solid transparent;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    transform: translate(1px, 1px);\r\n    cursor: pointer;\r\n    border-bottom: 1.5px solid ${COLORS.light_shadow};\r\n  }\r\n  ${({ isDone }) =>\r\n    isDone &&\r\n    `      \r\n      background: ${COLORS.light_checked};\r\n    `}\r\n  ${({ isDone, filter }) =>\r\n    isDone &&\r\n    filter === \"ACTIVE\" &&\r\n    `\r\n      display: none;\r\n    `}\r\n  ${({ isDone, filter }) =>\r\n    !isDone &&\r\n    filter === \"COMPLETED\" &&\r\n    `\r\n      display: none;\r\n    `}\r\n`;\r\nexport const Taskname = styled.div`\r\n  flex: 1;\r\n  font-size: 20px;\r\n  font-family: \"Maven Pro\", sans-serif;\r\n  color: ${COLORS.light_text_primary};\r\n  text-decoration: ${(props) => (props.isDone ? \"line-through\" : \"none\")};\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  padding: 0;\r\n`;\r\nexport const FormInput = styled.input`\r\n  font-size: 20px;\r\n  font-family: \"Maven Pro\", sans-serif;\r\n  color: ${COLORS.light_text_primary_edit};\r\n  padding: 0;\r\n  border: none;\r\n  border-radius: 0px;\r\n  transition: all 0.2s;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nexport const Edit = styled(EditOutlinedIcon)`\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    color: ${COLORS.light_text_primary};\r\n    transform: translate(1px, 1px);\r\n  }\r\n`;\r\nexport const Done = styled(DoneOutlinedIcon)`\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    color: ${COLORS.light_text_primary};\r\n    transform: translate(1px, 1px);\r\n  }\r\n`;\r\nexport const Remove = styled(DeleteOutlineIcon)`\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  transition: all 0.1s;\r\n  &:hover {\r\n    color: ${COLORS.light_text_primary};\r\n    transform: translate(1px, 1px);\r\n  }\r\n`;\r\nexport const FilterBTNContainer = styled.div`\r\n  display: ${({ todos }) => (todos.length ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  margin: 10px auto;\r\n  font-size: 14px;\r\n`;\r\nexport const FilterBTN = styled(Button)`\r\n  margin: 0 4px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  color: ${COLORS.light_func};\r\n  border: none;\r\n  &:hover {\r\n    background: ${COLORS.light_func_transparent};\r\n  }\r\n`;\r\nexport const FilterInfo = styled.div`\r\n  padding: 8px 16px;\r\n  color: ${COLORS.ligth_text_grey};\r\n`;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport {\r\n  Page,\r\n  Card,\r\n  InputArea,\r\n  Title,\r\n  InputForm,\r\n  Input,\r\n  Submit,\r\n  TodoArea,\r\n  TodoItem,\r\n  Taskname,\r\n  Form,\r\n  FormInput,\r\n  Edit,\r\n  Done,\r\n  Remove,\r\n  FilterBTNContainer,\r\n  FilterBTN,\r\n  FilterInfo,\r\n} from \"./components/styledApp\";\r\nimport { COLORS } from \"./constants/style\";\r\n\r\nfunction EditForm({ todo, todos, setTodos }) {\r\n  const [newInputVal, setNewInputVal] = useState(todo.taskname);\r\n  const handleEdit = (id, input) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id !== id) return todo;\r\n        return {\r\n          ...todo,\r\n          taskname: input,\r\n          isBeingEdited: false,\r\n        };\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleEdit(todo.id, newInputVal);\r\n      }}\r\n    >\r\n      <FormInput\r\n        autoFocus\r\n        value={newInputVal}\r\n        onChange={(e) => {\r\n          setNewInputVal(e.target.value);\r\n        }}\r\n      />\r\n      <Done\r\n        onClick={() => {\r\n          handleEdit(todo.id, newInputVal);\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction Todo({ todo, todos, setTodos, filter }) {\r\n  const handleStartEdit = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id !== id) return todo;\r\n        // 不能編輯已完成的 todo\r\n        if (todo.isDone) return todo;\r\n        return {\r\n          ...todo,\r\n          isBeingEdited: true,\r\n        };\r\n      })\r\n    );\r\n  };\r\n  const handleCheckboxChange = (id) => {\r\n    // 打勾時加上排序功能，已完成的排後面\r\n    setTodos(\r\n      todos\r\n        .map((todo) => {\r\n          if (todo.id !== id) return todo;\r\n          return {\r\n            ...todo,\r\n            isDone: !todo.isDone,\r\n          };\r\n        })\r\n        .sort((a, b) => {\r\n          return a.isDone - b.isDone;\r\n        })\r\n    );\r\n  };\r\n  const handleRemove = (id) => {\r\n    const data = todos.filter((todo) => {\r\n      return id !== todo.id;\r\n    });\r\n    setTodos(data);\r\n  };\r\n  return (\r\n    <TodoItem isDone={todo.isDone} filter={filter}>\r\n      <Checkbox\r\n        sx={{\r\n          \"&.Mui-checked\": {\r\n            color: COLORS.light_func,\r\n          },\r\n        }}\r\n        onChange={() => {\r\n          handleCheckboxChange(todo.id);\r\n        }}\r\n      />\r\n      {!todo.isBeingEdited && (\r\n        <Taskname isDone={todo.isDone}>{todo.taskname}</Taskname>\r\n      )}\r\n      {todo.isBeingEdited && (\r\n        <EditForm todo={todo} todos={todos} setTodos={setTodos} />\r\n      )}\r\n      {!todo.isBeingEdited && (\r\n        <Edit\r\n          onClick={() => {\r\n            handleStartEdit(todo.id);\r\n          }}\r\n        />\r\n      )}\r\n      <Remove\r\n        onClick={() => {\r\n          handleRemove(todo.id);\r\n        }}\r\n      />\r\n    </TodoItem>\r\n  );\r\n}\r\n\r\nTodo.propTypes = {\r\n  todo: PropTypes.object,\r\n  hadleRemove: PropTypes.func,\r\n  handleCheckboxChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nlet id = 3;\r\nexport default function App() {\r\n  const [filter, setFilter] = useState(\"ALL\");\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      taskname: \"吃早餐\",\r\n      isDone: false,\r\n      isBeingEdited: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      taskname: \"吃午餐\",\r\n      isDone: false,\r\n      isBeingEdited: false,\r\n    },\r\n  ]);\r\n\r\n  const handleInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputVal === \"\") {\r\n      alert(\"Please enter a task!\");\r\n      return;\r\n    }\r\n    setTodos([\r\n      {\r\n        id,\r\n        taskname: inputVal,\r\n        isDone: false,\r\n      },\r\n      ...todos,\r\n    ]);\r\n    setInputVal(\"\");\r\n    id++;\r\n  };\r\n  const handleClearCompleted = () => {\r\n    const data = todos.filter((todo) => {\r\n      return todo.isDone === false;\r\n    });\r\n    setTodos(data);\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Card>\r\n        <InputArea>\r\n          <Title>TODO</Title>\r\n          <InputForm onSubmit={handleInputSubmit}>\r\n            <Input\r\n              type=\"text\"\r\n              autoFocus={true}\r\n              placeholder=\"Add a task here...\"\r\n              value={inputVal}\r\n              onChange={(e) => {\r\n                setInputVal(e.target.value);\r\n              }}\r\n            />\r\n            <Submit type=\"submit\" variant=\"contained\">\r\n              ADD\r\n            </Submit>\r\n          </InputForm>\r\n        </InputArea>\r\n        <TodoArea>\r\n          {todos.map((todo) => (\r\n            <Todo\r\n              className=\"ui-state-default\"\r\n              key={todo.id}\r\n              todo={todo}\r\n              todos={todos}\r\n              setTodos={setTodos}\r\n              filter={filter}\r\n            />\r\n          ))}\r\n        </TodoArea>\r\n        <FilterBTNContainer todos={todos}>\r\n          <FilterInfo>{filter}</FilterInfo>\r\n          <FilterBTN\r\n            onClick={() => {\r\n              setFilter(\"ALL\");\r\n              setTodos(todos);\r\n            }}\r\n          >\r\n            all\r\n          </FilterBTN>\r\n          <FilterBTN\r\n            onClick={() => {\r\n              setFilter(\"ACTIVE\");\r\n              setTodos(todos);\r\n            }}\r\n          >\r\n            active\r\n          </FilterBTN>\r\n          <FilterBTN\r\n            onClick={() => {\r\n              setFilter(\"COMPLETED\");\r\n              setTodos(todos);\r\n            }}\r\n          >\r\n            completed\r\n          </FilterBTN>\r\n          <FilterBTN onClick={handleClearCompleted}>clear completed</FilterBTN>\r\n        </FilterBTNContainer>\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}